<Overriding>
 : Changing the contents of a method inherited from a superclass
- In object-oriented terms, overriding means to override 
  the functionality of an existing method.
- The benefit of overriding is: ability to define a behavior 
  that's specific to the subclass type.
  That means a subclass can implement a parent classmethod based on its requirement.
- In object-oriented terms, overriding means to override 
  the functionality of an existing method.

- Rules of Overriding
  1. The argument list should be exactly the same as that of the overridden method.
  2. The return type should be the same or a subtype of the return type declared 
     in the original overridden method in the superclass.
  3.The access level cannot be more restrictive than the overridden method's access level. 
    ex) If the superclass method is declared public then the overridding method 
        in the sub class cannot be either private or protected.
  4. Instance methods can be overridden only if they are inherited by the subclass.
  5. A method declared final cannot be overridden.
  6. A method declared static cannot be overridden but can be re-declared.
  7. If a method cannot be inherited, then it cannot be overridden.
  8. A subclass within the same package as the instance's superclass can override 
     any superclass method that is not declared private or final.

<Super>
- The super keyword is similar to 'this' keyword.
- It is used to differentiate the members of superclass 
  from the members of subclass, if they have same names.
- It is used to invoke the superclass constructor from subclass.
- If a class is inheriting the properties of another class. 
  And if the members of the superclass have the names same as the sub class, 
  to differentiate we use super keyword.